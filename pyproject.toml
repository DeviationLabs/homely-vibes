[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "homely_vibes"
version = "2.0.0"
description = "Home automation and monitoring system"
authors = [{name = "Amit Butala", email = "abutala@deviationlabs.com"}]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "requests>=2.31.0",
    "openai>=1.0.0",
    "pandas>=2.2.0",
    "numpy>=1.24.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "langchain>=0.2.5",
    "langchain-openai>=0.1.0",
    "tiktoken>=0.8.0",
    "uvicorn>=0.23.0",
    "matplotlib>=3.10.5",
    "tld>=0.13.1",
    "yalexs>=8.0.0",
    "aiohttp>=3.12.15",
    "pytest>=8.4.1",
    "gpxpy>=1.5.0",
    "click>=8.0.0",
    "paramiko>=2.8.0",
    "libpyfoscam>=1.2.2",
    "markdown>=3.4.0"
]

[project.optional-dependencies]
iot = [
]
streamlit = [
    "streamlit>=1.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-forked>=1.4.0",
    "ruff>=0.13.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "vulture>=2.0.0",
    "semgrep>=1.0.0",
    "codespell>=2.0.0",
    "deptry>=0.23.1",
    # Type stubs  
    "types-requests>=2.31.0",
    "types-paramiko>=3.4.0",
    "pandas-stubs>=2.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["lib", "Tesla", "WaterParser", "BimpopAI", "August"]

[tool.deptry]
known_first_party = [
    "lib",  # Add lib as first-party module
    "Constants",
    "Mailer",
    "MyPushover",
    "MyTwilio",
    "NetHelpers",
    "FoscamImager",
    "TFOneShot",
    "EmailMyIP",
    # Project-specific modules
    "rachio_client",
    "flume_client",
    "data_storage",
    "collector",
    "reporter",
    "logger",
    "PumpReport",
    "PumpStatsWriter",
    "TuyaLogParser",
    "utils",  # for Bimpop.ai/fe/utils.py
]
exclude = ["tests", ".venv", "backups", "lib/TeslaPy"]

[tool.deptry.package_module_name_map]
streamlit = "streamlit"
# Ignore missing dependencies that are optional or environment-specific
[tool.deptry.per_rule_ignores]
DEP001 = [
    "aiy",
    "google_auth_oauthlib",
    "pinecone",
    "langchain_pinecone",
    "tld",
    "tensorflow",
    "keras",
    "tesla_api",
    "tesla_powerwall",
    "matplotlib",
    "twilio",
    "cv2",
    "__main__"  # Built-in module used in logger.py
]
DEP002 = [
    # Dev tools that aren't imported directly
    "pytest-cov",
    "pytest-asyncio", 
    "pytest-mock",
    "pytest-forked",
    "ruff",
    "flake8",
    "mypy",
    "vulture",
    "semgrep",
    "codespell",
    "deptry",
    # Type stubs for mypy (not directly imported)
    "types-requests",
    "types-paramiko", 
    "pandas-stubs",
]
DEP003 = ["google", "streamlit", "BimpopAI"]

[tool.pytest.ini_options]
testpaths = ["Tesla", "RachioFlume", "NodeCheck", "August"]
addopts = "-v --tb=short"
asyncio_mode = "auto"


[tool.ruff]
line-length = 100
exclude = [
    ".git",
    ".venv", 
    "__pycache__",
    "lib/TeslaPy/**",  # Exclude TeslaPy submodule from ruff checks
]

[tool.ruff.lint.per-file-ignores]
"*/test_*.py" = ["E402"]  # Allow imports after mocks in test files
"GarageCheck/transferlearn_on_imagenet.py" = ["E402"]  # Jupyter notebook style

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
namespace_packages = true
explicit_package_bases = true
exclude = [
    "lib/TeslaPy/",  # Third-party submodule
]

[[tool.mypy.overrides]]
module = [
    "Constants",
    "TeslaPy.*",
    "yalexs.*",
    "twilio.*",
    "teslapy.*",
    "webview.*",
    "selenium.*",
    "geopy.*",
    "tensorflow.*",
    "keras.*",
    "aiy.*",
    "google.*",
    "google_auth_oauthlib.*",
    "websocket.*",
    "urlparse.*",
    "PumpReport.*",
    "PumpStatsWriter.*",
    "TuyaLogParser.*",
    "tesla_api.*",
    "pinecone.*",
    "langchain_pinecone.*",
    "cv2.*",
    "collector.*",
    "reporter.*",
    "utils.*",
    "streamlit.*",
]
ignore_missing_imports = true

# Less strict checking for remaining legacy modules  
[[tool.mypy.overrides]]
module = [
    "lib.*",
    "WaterParser.*", 
    "JWTs.*",
    "GPXParser.*",
    "WaterLogging.*",
    "OpenAIAdmin.*",
    # Modules with remaining complex type issues (clean baseline)
    "BimpopAI.aiy_hat.aiy_runner",
    "BimpopAI.aiy_hat.auth_helpers", 
    "BimpopAI.app.utils",
    "BrowserAlert.alert_me",
    "GarageCheck.TFOneShot",
    "Tesla.manage_power",
    "Tesla.tesla_async_apis",
    "Tesla.test_manage_power",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
warn_return_any = false
warn_unreachable = false
ignore_errors = true

[dependency-groups]
dev = [
    "pytest-forked>=1.6.0",
]


