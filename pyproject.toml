[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "water-tracking"
version = "0.1.0"
description = "Home automation and monitoring system"
authors = ["Amit Butala <amit@example.com>"]
readme = "README.md"
packages = [{include = "lib"}, {include = "Tesla"}, {include = "WaterParser"}, {include = "Bimpop.ai"}]

[tool.poetry.dependencies]
python = ">=3.13,<4.0"
requests = "^2.31.0"
teslapy = "^2.6.0"
openai = "^1.0.0"
pandas = "^2.2.0"
numpy = "^1.24.0"
Pillow = "^10.0.0"
python-dotenv = "^0.19.0"
pydantic = "^2.0.0"
openpyxl = "^3.1.0"
fastapi = "^0.100.0"
langchain = "^0.1.0"
langchain-openai = "^0.1.0"
tiktoken = "^0.8.0"
urllib3 = "2.5.0"
uvicorn = "^0.23.0"

[tool.poetry.group.streamlit.dependencies]
streamlit = "^1.20.0"

[tool.poetry.group.iot.dependencies]
asyncio-mqtt = "^0.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
black = "^24.3.0"
flake8 = "^5.0.0"
mypy = "^1.0.0"
isort = "^5.10.0"

[tool.pytest.ini_options]
testpaths = ["Tesla", "WaterParser", "Bimpop.ai"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "Constants",
    "TeslaPy.*",
    "tesla_powerwall.*",
]
ignore_missing_imports = true